"""
Django settings for News_Portal project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ncb8+w57$*3gj6y&o+za#ss&gl97mt*0+@-t^7l&ntz18sd0lb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Для переодических сигналов
    'django_apscheduler',

    # 'simpleapp',
    'simpleapp.apps.SimpleappConfig',

    'django_filters',
    'sign',
    'protect',

    # для статических страниц
    'django.contrib.sites',
    'django.contrib.flatpages',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # ... include the providers you want to enable:
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.yandex',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',

    'allauth.account.middleware.AccountMiddleware',

]

ROOT_URLCONF = 'News_Portal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_FORMS = {'signup': 'sign.models.BasicSignupForm'}

LOGIN_URL = '/accounts/login/'

WSGI_APPLICATION = 'News_Portal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]


ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'none'
#Если в verification стоит "none" то подтверждать НЕ НАДО
#Если в verification стоит "mandatory" то подтверждать НАДО


ADMINS = (
    ('ilyas', 'ilyasmahashev@yandex.ru'),
)

EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'ilyasmahashev'
EMAIL_HOST_PASSWORD = 'camelvjwgfnjcrnl'
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = 'ilyasmahashev@yandex.ru'

#Для Логирования и отправки на почту

EMAIL_ADMIN = 'ilyasmahashev@yandex.ru'
SERVER_EMAIL = 'ilyasmahashev@yandex.ru'


SITE_URL = 'http://127.0.0.1:8000'

#Для django_apscheduler

# формат даты, которую будет воспринимать наш задачник (вспоминаем модуль по фильтрам)
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"
# если задача не выполняется за 25 секунд, то она автоматически снимается, можете поставить время побольше, но как правило, это сильно бьёт по производительности сервера
APSCHEDULER_RUN_NOW_TIMEOUT = 25  # Seconds

#Для настройки Redis + Celery
CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


#Кеширование
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files'), # Указываем, куда будем сохранять кэшируемые файлы! Не забываем создать папку cache_files внутри папки с manage.py!
    }
}




#Переопределение Логирования
LOGGING = {
    'version': 1,
    'disable_existing_logger': False,
    'style': '{',
    'formatters': {
        'simple_for_debug': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        },
        'simple_for_warning': {
            'format': '%(pathname)s %(asctime)s %(levelname)s %(message)s'
        },
        'simple_for_error_and_critical': {
            'format': '%(pathname)s %(asctime)s %(levelname)s %(message)s %(exc_info)s'
        },
        'simple_for_info': {
            'format': '%(asctime)s %(levelname)s %(module)s %(message)s'
        },
        'simple_for_security': {
            'format': '%(asctime)s %(levelname)s %(module)s %(message)s'
        },
        'simple_for_MAIL': {
            'format': '%(pathname)s %(asctime)s %(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'Zadanie_№1_DEBUG': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple_for_debug'
        },
        'Zadanie_№1_WARNING': {
            'level': 'WARNING',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple_for_warning'
        },
        'Zadanie_№1_ERROR': {
            'level': 'ERROR',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple_for_error_and_critical'
        },
        'Zadanie_№1_CRITICAL': {
            'level': 'CRITICAL',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple_for_error_and_critical'
        },
        'Zadanie_№2_INFO': {
            'level': 'INFO',
            'filters': ['require_debug_false'],
            'class': 'logging.FileHandler',
            'filename': 'general.log',
            'formatter': 'simple_for_info',
        },
        'Zadanie_№3_CRITICAL': {
            'level': 'CRITICAL',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': 'errors.log',
            'formatter': 'simple_for_error_and_critical',
        },
        'Zadanie_№3_ERROR': {
            'level': 'ERROR',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': 'errors.log',
            'formatter': 'simple_for_error_and_critical',
        },
        'Zadanie_№4_security': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': 'security.log',
            'formatter': 'simple_for_security',
        },
        'Zadanie_№5_mail': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'simple_for_MAIL'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['Zadanie_№1_DEBUG', 'Zadanie_№1_WARNING', 'Zadanie_№1_ERROR',
                         'Zadanie_№1_CRITICAL', 'Zadanie_№2_INFO'],
            'propagate': True,
        },
        'django.request':{
            'handlers': ['Zadanie_№3_CRITICAL', 'Zadanie_№3_ERROR', 'Zadanie_№5_mail'],
            'propagate': False,

        },
        'django.server': {
            'handlers': ['Zadanie_№3_CRITICAL', 'Zadanie_№3_ERROR', 'Zadanie_№5_mail'],
            'propagate': False,


        },
        'django.template': {
            'handlers': ['Zadanie_№3_CRITICAL', 'Zadanie_№3_ERROR'],
            'propagate': True,

        },
        'django.db.backends': {
            'handlers': ['Zadanie_№3_CRITICAL', 'Zadanie_№3_ERROR'],
            'propagate': True,

        },
        'django.security': {
            'handlers': ['Zadanie_№4_security'],
            'propagate': True,

        },
    },
}

